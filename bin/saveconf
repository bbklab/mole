#!/usr/bin/env bash
#
# =====================================================
#  This Script Responsible for Save ESOP Config Files 
# =====================================================
#
#

# === BASE_DIR DEF
#
[ -z ${BASE_DIR} ] && { 
        path=$( cd $(dirname $0) && pwd)
        BASE_DIR=${path%/*}
}
if [ -f ${BASE_DIR}/bin/include ] && [ -s ${BASE_DIR}/bin/include ]; then
        source ${BASE_DIR}/bin/include 2>&1
        rc=$?
        [ "$rc" != "0" ] && {
                echo "load include file failed with status $rc"
                exit 1
        }
else
        echo "${BASE_DIR}/bin/include not exist or empty. exit" 
        exit 1
fi

if [ -d "${ESOP_SAVEOLD_DIR}" ]; then
	dstdir="${ESOP_SAVEOLD_DIR}"
	seqnum=0
	while [ -d "${dstdir}" ]
	do
		((seqnum++))
		dstdir="${ESOP_SAVEOLD_DIR}_${seqnum}"
	done

	/bin/mv "${ESOP_SAVEOLD_DIR}" "${dstdir}" 2>&-
fi

if /bin/mkdir -p "${ESOP_SAVEOLD_DIR}/opt" >/dev/null 2>&1; then
	# do NOT check this action succ or fail
	/bin/cp -arf ${OPT_DIR}/{process.lst,receviers.lst,sms.lst} "${ESOP_SAVEOLD_DIR}/opt" >/dev/null 2>&1
	if /bin/cp -arf  "${PROXY_CONF_PATH}" "${MOLE_CONF_PATH}" "${ESOP_SAVEOLD_DIR}" >/dev/null 2>&1; then
		if echo "$(date +%s)" "$(date +%F_%T)" > "${ESOP_SAVEOLD_DIR}/.rpmun.time" 2>/dev/null; then
			echo "+OK"
			exit 0
		else
			echo "-ERR"
			exit 3
		fi
	else
		echo "-ERR"
		exit 2
	fi
else
	echo "-ERR"
	exit 1
fi
