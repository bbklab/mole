#!/usr/bin/env bash


export PATH="${PATH}:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

### GLOBAL DEF
BASE_DIR="$(cd $(dirname $0); pwd)"
LOGFILE="${BASE_DIR}/${0##*/}.log"
FILEDIR="${BASE_DIR}/files"

# DIR DEF
PATH_ESOP="/usr/local/eyou/toolmail"
PATH_OPT="${PATH_ESOP}/opt"
PATH_LOG="${PATH_ESOP}/log"
PATH_RUN="${PATH_ESOP}/run"
PATH_MYSQL="${PATH_OPT}/mysql"
PATH_APP="${PATH_ESOP}/app"
PATH_SBIN="${PATH_APP}/sbin"
PATH_ETC="${PATH_ESOP}/etc"
PATH_TMPINST="${PATH_ESOP}/tmp_install"
PATH_TMPSQL="${PATH_TMPINST}/sql/"

# FILE DEF
INIT_SH="${PATH_SBIN}/eyou_toolmail"
MYSQL_CLI="${PATH_MYSQL}/bin/mysql"
MYSQL_CONF="${PATH_ETC}/mysql/my.cnf"
MYSQL_DATA="${PATH_ESOP}/data/mysql/"

USER="eyou"
USERID="12037"

# SUDO DEF
SUDO="sudo -u ${USER}"


# Global Func Def

# - check_rc
check_rc() {
  if [ $? == 0 ]; then
        echo -e " -- $(date +%F_%T)  succed!  ${*} " | tee -a $LOGFILE
  else
        echo -e " -- $(date +%F_%T)  failed!  ${*} " | tee -a $LOGFILE
        exit 1
  fi
}

# create system user
add_user() {
	if id ${USER} >/dev/null 2>&1; then
		check_rc "no need to add system user ($USER)"
	else
        	useradd ${USER} -m -d /usr/local/%{name}/ -u ${USERID} >/dev/null 2>&1
		check_rc "add system user $USER($USERID)"
	fi
}

# init install mysql db
init_db() {
	cd "${PATH_MYSQL}" >/dev/null 2>&1
	check_rc "chaning directory into ${PATH_MYSQL}"

	/bin/chown -R eyou:eyou ${MYSQL_DATA} ${PATH_LOG} ${PATH_RUN}
	check_rc "change ower/group as eyou:eyou for ${MYSQL_DATA} ${PATH_LOG} ${PATH_RUN}" 

	${SUDO} ./scripts/mysql_install_db --defaults-file=${MYSQL_CONF} --datadir=${MYSQL_DATA} >> $LOGFILE 2>&1
	check_rc "init install mysql db to ${MYSQL_DATA}"
}

# start mysql db
start_mysql() {
	${INIT_SH} start mysql >> $LOGFILE 2>&1
	check_rc "start mysql"
}

# remove useless database/user
clean_mysql() {
	${MYSQL_CLI} -s -e "drop database test;"
	check_rc "remove database test"

	${MYSQL_CLI} -s -e "delete from mysql.user where User='';"
	check_rc "remove anon users"
}

# create database/tables, grant privileges
init_eyoumonitor() {
	${MYSQL_CLI} -s < $PATH_TMPSQL/db_creation_eyou_monitor.sql
	check_rc "create eyou_monitor schema"

	${MYSQL_CLI} -s < $PATH_TMPSQL/db_init_eyou_monitor.sql
	check_rc "initialize eyou_monitor data"

	${MYSQL_CLI} -s -e "GRANT ALL PRIVILEGES ON eyou_monitor.* TO eyou@127.0.0.1 IDENTIFIED BY 'eyou' WITH GRANT OPTION;" 
	check_rc "grant eyou@127.0.0.1"

	${MYSQL_CLI} -s -e "GRANT ALL PRIVILEGES ON eyou_monitor.* TO eyou@localhost IDENTIFIED BY 'eyou' WITH GRANT OPTION;"
	check_rc "grant eyou@localhost"
}


### Main Body Begin

if [ "$(id -u)" != "0" ]; then
  echo " root privileges required! "
  exit 1
fi 

if [ -d ${PATH_ESOP} ]; then
  read -p " ${PATH_ESOP} already exist, continue ? [yes|no]: "  response
  if [ "${response}" != "yes" ]; then
        exit 1
  fi  
fi

/bin/mkdir -p ${PATH_ESOP}                                                                                                   
check_rc "create directory ${PATH_ESOP}"

/bin/cp -a $FILEDIR/* ${PATH_ESOP}
check_rc "copy files to ${PATH_ESOP}"


if [ -f ${MYSQL_CLI} -a -x ${MYSQL_CLI} ]; then
	MYSQL_CLI="${MYSQL_CLI} -h 127.1 -P 3308"
else
	echo "${MYSQL_CLI} not prepared!"
	exit 1
fi


add_user
init_db
start_mysql
clean_mysql
init_eyoumonitor
